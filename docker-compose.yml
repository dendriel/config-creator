version: "3.9"

services:
  front-service:
    image: dendriel/config-creator-front
    ports:
      - 80:80
    restart: always
    volumes:
      - ./conf/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
  rest-service:
    image: dendriel/config-creator-rest
    restart: always
#    ports:
#      - 8081:8081
    environment:
      - MONGO_DB_HOST=mongo-service
      - MONGO_DB_NAME=config_creator
      - MONGO_DB_PORT=27017
      - MONGO_DB_USER=root
      - MONGO_DB_PASS=pass
      - AUTH_SERVICE_URL=http://auth-service:8080
      - EXPORTER_QUEUE_URL=http://sqs-service:9324
      - AWS_ACCESS_KEY_ID=1111
      - AWS_SECRET_KEY=2222
      - SERVICE_URL=http://front-service:3000
      - SERVICE_AUTH_KEY=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyZXN0IiwiZXhwIjoxNjMzMzc4NzQ0LCJpYXQiOjE2MzA3ODY3NDR9.rvlpOK5RljrCIWfdTKMg0kNlpOPMGghB9yILNE1V3jY
    depends_on:
      mongo-service:
        condition: service_healthy
      sqs-service:
        condition: service_healthy
  auth-service:
    image: dendriel/npc-data-manager-auth:latest
    restart: always
#    ports:
#      - 8080:8080
    depends_on:
      mysql-service:
        condition: service_healthy
    environment:
      - MYSQL_DB=config_creator
      - MYSQL_HOST=mysql-service
      - MYSQL_PORT=3306
      - MYSQL_USER=root
      - MYSQL_PASS=pass
  storage-service:
    image: dendriel/npc-data-manager-storage:latest
    restart: always
#    ports:
#      - 8082:8082
    volumes:
      - c:\.aws:/root/.aws:ro
    depends_on:
      mysql-service:
        condition: service_healthy
    environment:
      - MYSQL_DB=config_creator
      - MYSQL_HOST=mysql-service
      - MYSQL_PORT=3306
      - MYSQL_USER=root
      - MYSQL_PASS=pass
      - AUTH_URL=http://auth-service:8080
  exporter-service:
    image: dendriel/config-creator-exporter
    restart: always
    environment:
      - SERVICE_URL=http://front-service
      - QUEUE_URL=http://sqs-service:9324/queue/export-request
      - AUTH_KEY=eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJleHBvcnRlciIsImV4cCI6MTYzMTc1MDE4NCwiaWF0IjoxNjI5MTU4MTg0fQ.45AW5A7mp7gGCdYztoAadzPPumdV7MAiAXGpBX4be_8
    depends_on:
      sqs-service:
        condition: service_healthy
  sqs-service:
    image: roribio16/alpine-sqs:latest
    restart: always
#    ports:
#      - 9325:9325 # web interface
#      - 9324:9324 # consumer
    volumes:
      - ./conf/sqs:/opt/custom
    healthcheck:
      test: "/usr/bin/wget http://localhost:9325"
      timeout: 5s
      retries: 40
  mysql-service:
    image: mysql:8
    restart: always
# Allow connection from host machine on port 3307
#    ports:
#      - 3307:3306
    volumes:
      - ./data/mysql_data:/var/lib/mysql
      - ./data/mysql_init.sql:/docker-entrypoint-initdb.d/1.sql
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: config_creator
      MYSQL_USER: docker
      MYSQL_PASSWORD: pass
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=pass --execute \"SHOW DATABASES;\""
      interval: 5s
      timeout: 5s
      retries: 40
      start_period: 10s
  mongo-service:
    image: mongo
    restart: always
#    ports:
#      - 27027:27017
    environment:
      - MONGO_INITDB_DATABASE=config_creator
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      - ./data/mongo_init.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./data/mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 5s
      timeout: 5s
      retries: 40
      start_period: 10s
